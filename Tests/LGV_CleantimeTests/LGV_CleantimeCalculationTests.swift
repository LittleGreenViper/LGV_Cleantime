/*
  Â© Copyright 2022, Little Green Viper Software Development LLC
 
 LICENSE:
 
 MIT License
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
 modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

import XCTest
import LGV_Cleantime

/* ###################################################################################################################################### */
// MARK: - Calculations Tests -
/* ###################################################################################################################################### */
/**
 **WHY THE HECK SO PEDANTIC?**
 
 Good question. Glad you asked.
  
 The tool uses a fundamental Date() algorithm, and a repeating test would use the same algorithm.
 One of the things I'm most worried about, is changes to that algorithm, so I need to do a simple, pedantic, test-every-damn-thing-every-damn-time test, to ensure that things are the way they are supposed to be.
*/
class LGV_CleantimeCalculationTests: XCTestCase {
    /* ################################################################## */
    /**
     */
    static func makeDate(year inYear: Int, month inMonth: Int, day inDay: Int, calendar inCalendar: Calendar? = nil) -> Date { (nil == inCalendar ? Calendar(identifier: .gregorian) : inCalendar!).date(from: DateComponents(year: inYear, month: inMonth, day: inDay)) ?? Date() }

    /* ################################################################## */
    /**
     */
    var endDate = Date()
    
    /* ################################################################## */
    /**
     */
    var startDate = Date()
    
    /* ################################################################## */
    /**
     */
    override func setUp() {
        endDate = Self.makeDate(year: 2021, month: 1, day: 1)
    }
    
    /* ################################################################## */
    /**
     */
    func testDateCalcSimpleYearRanges() {
        var testTarget = LGV_CleantimeDateCalc()
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertNil(testTarget.timeInterval)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: Self.makeDate(year: 1949, month: 12, day: 31))
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertNil(testTarget.timeInterval)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: Date())
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertEqual(testTarget.timeInterval, 0)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: Self.makeDate(year: 2020, month: 12, day: 31), endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 1)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.timeInterval, 86400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: Self.makeDate(year: 2020, month: 12, day: 31), endDate: Self.makeDate(year: 2020, month: 12, day: 31))
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertEqual(testTarget.timeInterval, 0)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: Self.makeDate(year: 2020, month: 12, day: 30), endDate: Self.makeDate(year: 2020, month: 12, day: 31))
        XCTAssertEqual(testTarget.cleanTime.totalDays, 1)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.timeInterval, 86400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        startDate = Self.makeDate(year: 1950, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 25933)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 852)
        XCTAssertEqual(testTarget.cleanTime.years, 71)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.timeInterval, 2240611200)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 1960, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 22281)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 732)
        XCTAssertEqual(testTarget.cleanTime.years, 61)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.timeInterval, 1925078400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 1970, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 18628)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 612)
        XCTAssertEqual(testTarget.cleanTime.years, 51)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.timeInterval, 1609459200)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 1980, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 14976)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 492)
        XCTAssertEqual(testTarget.cleanTime.years, 41)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.timeInterval, 1293926400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 2000, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 7671)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 252)
        XCTAssertEqual(testTarget.cleanTime.years, 21)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .twentyYears)
        XCTAssertEqual(testTarget.timeInterval, 662774400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 2020, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 366)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 31622400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 2019, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 731)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 24)
        XCTAssertEqual(testTarget.cleanTime.years, 2)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        if case let .years(numberOfYears) = testTarget.lastCleantimeMilestone,
           2 == numberOfYears {
            XCTAssertTrue(true, "It is exactly two years.")
        } else {
            XCTFail("Should be exactly two years!")
        }
        XCTAssertEqual(testTarget.timeInterval, 63158400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        // Test for non-leap year.
        startDate = Self.makeDate(year: 2019, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 2020, month: 1, day: 1))
        XCTAssertEqual(testTarget.cleanTime.totalDays, 365)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 31536000)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2020, month: 1, day: 1))

        testTarget = LGV_CleantimeDateCalc(startDate: endDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertEqual(testTarget.timeInterval, 0)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        startDate = Self.makeDate(year: 2023, month: 1, day: 1)
        endDate = Self.makeDate(year: 2021, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 0)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertFalse(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertEqual(testTarget.timeInterval, -63072000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
    }
    
    /* ################################################################## */
    /**
     */
    func testDateCalc1953() {
        startDate = Self.makeDate(year: 1953, month: 10, day: 5)
        var testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 806)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 24560)
        XCTAssertEqual(testTarget.cleanTime.years, 67)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 27)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.timeInterval, 2121984000)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2020, month: 10, day: 5))

        let components = testTarget.components
        XCTAssertEqual(components.year, 67)
        XCTAssertEqual(components.month, 2)
        XCTAssertEqual(components.day, 27)

        let timeInterval = testTarget.timeInterval
        XCTAssertEqual(timeInterval, 2121984000.0)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1953, month: 11, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 1)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 31)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.timeInterval, 2678400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1953, month: 11, day: 4))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 30)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 30)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.timeInterval, 2592000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1953, month: 11, day: 6))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 1)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 32)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.timeInterval, 2764800)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1953, month: 12, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 2)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 61)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixtyDays)
        XCTAssertEqual(testTarget.timeInterval, 5270400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1954, month: 12, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 14)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 426)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 36806400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1954, month: 10, day: 5))

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1953, month: 12, day: 4))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 1)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 60)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 29)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixtyDays)
        XCTAssertEqual(testTarget.timeInterval, 5184000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1954, month: 1, day: 4))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 2)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 91)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 30)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .ninetyDays)
        XCTAssertEqual(testTarget.timeInterval, 7862400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1954, month: 4, day: 4))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 5)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 181)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 5)
        XCTAssertEqual(testTarget.cleanTime.days, 30)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .ninetyDays)
        XCTAssertEqual(testTarget.timeInterval, 15638400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1954, month: 4, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 6)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 182)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 6)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixMonths)
        XCTAssertEqual(testTarget.timeInterval, 15724800)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1954, month: 8, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 10)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 304)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 10)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .nineMonths)
        XCTAssertEqual(testTarget.timeInterval, 26262000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1963, month: 11, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 121)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 3683)
        XCTAssertEqual(testTarget.cleanTime.years, 10)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenYears)
        XCTAssertEqual(testTarget.timeInterval, 318211200)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1963, month: 10, day: 5))

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1963, month: 10, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 120)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 3652)
        XCTAssertEqual(testTarget.cleanTime.years, 10)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenYears)
        XCTAssertEqual(testTarget.timeInterval, 315529200)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1963, month: 10, day: 5))

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1968, month: 10, day: 5))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 180)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 5479)
        XCTAssertEqual(testTarget.cleanTime.years, 15)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fifteenYears)
        XCTAssertEqual(testTarget.timeInterval, 473382000)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1968, month: 10, day: 5))

        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: Self.makeDate(year: 1960, month: 1, day: 1))
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 74)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 2279)
        XCTAssertEqual(testTarget.cleanTime.years, 6)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 27)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fiveYears)
        XCTAssertEqual(testTarget.timeInterval, 196905600)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1959, month: 10, day: 5))
   }
    
    /* ################################################################## */
    /**
     */
    func testDateCalcLeapYear() {
        startDate = Self.makeDate(year: 2020, month: 1, day: 31)
        endDate = Self.makeDate(year: 2020, month: 3, day: 1)
        var testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 1)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 30)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.timeInterval, 2592000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        startDate = Self.makeDate(year: 2021, month: 1, day: 31)
        endDate = Self.makeDate(year: 2021, month: 3, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 1)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 29)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 1)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.timeInterval, 2505600)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        startDate = Self.makeDate(year: 2019, month: 2, day: 28)
        endDate = Self.makeDate(year: 2020, month: 2, day: 28)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 365)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 31536000)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 2020, month: 1, day: 1)
        endDate = Self.makeDate(year: 2020, month: 3, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 2)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 60)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixtyDays)
        XCTAssertEqual(testTarget.timeInterval, 5184000)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        endDate = Self.makeDate(year: 2021, month: 1, day: 29)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 394)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 28)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 34041600)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2021, month: 1, day: 1))

        endDate = Self.makeDate(year: 2021, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 366)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 31622400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        endDate = Self.makeDate(year: 2021, month: 3, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 14)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 455)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 30)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 39308400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2021, month: 1, day: 1))

        endDate = Self.makeDate(year: 2021, month: 4, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 15)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 456)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 3)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 39394800)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2021, month: 1, day: 1))

        startDate = Self.makeDate(year: 2020, month: 2, day: 29)
        endDate = Self.makeDate(year: 2021, month: 2, day: 28)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 365)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 0)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 31536000)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2021, month: 2, day: 28))
    }
    
    /* ################################################################## */
    /**
     */
    func testDateCalcEighteenMonths() {
        startDate = Self.makeDate(year: 2011, month: 8, day: 29)
        endDate = Self.makeDate(year: 2013, month: 3, day: 1)
        var testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 18)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 550)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 6)
        XCTAssertEqual(testTarget.cleanTime.days, 1)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 47523600)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2012, month: 8, day: 29))

        startDate = Self.makeDate(year: 2018, month: 8, day: 29)
        endDate = Self.makeDate(year: 2020, month: 4, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 19)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 581)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 7)
        XCTAssertEqual(testTarget.cleanTime.days, 3)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 50198400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2019, month: 8, day: 29))
    }

    /* ################################################################## */
    /**
     */
    func testDateCalcSolarCalendar() {
        let calendar = Calendar(identifier: .persian)
        startDate = Self.makeDate(year: 1388, month: 1, day: 27, calendar: calendar)
        endDate = Self.makeDate(year: 1400, month: 4, day: 12, calendar: calendar)
        var testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 146)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 4461)
        XCTAssertEqual(testTarget.cleanTime.years, 12)
        XCTAssertEqual(testTarget.cleanTime.months, 2)
        XCTAssertEqual(testTarget.cleanTime.days, 17)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertTrue(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenYears)
        XCTAssertEqual(testTarget.timeInterval, 385430400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1400, month: 1, day: 27, calendar: calendar))

        endDate = Self.makeDate(year: 1388, month: 2, day: 2, calendar: calendar)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 0)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 6)
        XCTAssertEqual(testTarget.cleanTime.years, 0)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 6)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.timeInterval, 518400)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)

        endDate = Self.makeDate(year: 1389, month: 2, day: 2, calendar: calendar)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 12)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 371)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 0)
        XCTAssertEqual(testTarget.cleanTime.days, 6)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertFalse(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.timeInterval, 32054400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1389, month: 1, day: 27, calendar: calendar))

        startDate = Self.makeDate(year: 2018, month: 8, day: 29)
        endDate = Self.makeDate(year: 2020, month: 4, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 19)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 581)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 7)
        XCTAssertEqual(testTarget.cleanTime.days, 3)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 50198400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2019, month: 8, day: 29))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1398, month: 6, day: 7, calendar: calendar))

        startDate = Self.makeDate(year: 1397, month: 6, day: 7, calendar: calendar)
        endDate = Self.makeDate(year: 2020, month: 4, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 19)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 581)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 7)
        XCTAssertEqual(testTarget.cleanTime.days, 3)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 50198400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2019, month: 8, day: 29))

        startDate = Self.makeDate(year: 2018, month: 8, day: 29)
        endDate = Self.makeDate(year: 1399, month: 1, day: 13, calendar: calendar)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate, calendar: calendar)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 19)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 581)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 7)
        XCTAssertEqual(testTarget.cleanTime.days, 3)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 50198400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2019, month: 8, day: 29))

        startDate = Self.makeDate(year: 1397, month: 6, day: 7, calendar: calendar)
        endDate = Self.makeDate(year: 1399, month: 1, day: 13, calendar: calendar)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.cleanTime.totalMonths, 19)
        XCTAssertEqual(testTarget.cleanTime.totalDays, 581)
        XCTAssertEqual(testTarget.cleanTime.years, 1)
        XCTAssertEqual(testTarget.cleanTime.months, 7)
        XCTAssertEqual(testTarget.cleanTime.days, 3)
        XCTAssertTrue(testTarget.cleanTime.isOneDayOrMore)
        XCTAssertTrue(testTarget.cleanTime.isThirtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixtyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNinetyDaysOrMore)
        XCTAssertTrue(testTarget.cleanTime.isSixMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isNineMonthsOrMore)
        XCTAssertTrue(testTarget.cleanTime.isOneYearOrMore)
        XCTAssertTrue(testTarget.cleanTime.isEighteenMonthsOrMore)
        XCTAssertFalse(testTarget.cleanTime.isTwoOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFifteenOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTwentyFiveOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isTenThousandDaysOrMore)
        XCTAssertFalse(testTarget.cleanTime.isThirtyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFortyOrMoreYears)
        XCTAssertFalse(testTarget.cleanTime.isFiftyOrMoreYears)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.timeInterval, 50198400)
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2019, month: 8, day: 29))
    }
    
    /* ################################################################## */
    /**
     */
    func testLastCleantimeMilestone() {
        startDate = Self.makeDate(year: 1952, month: 1, day: 1)
        endDate = Self.makeDate(year: 1952, month: 1, day: 1)
        var testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .invalid)
        XCTAssertNil(testTarget.dateOfLastCleantimeMilestone)
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 1, day: 2)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 1, day: 2))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 1, day: 30)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneDay)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 1, day: 2))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 1, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 1, day: 31))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 2, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 1, day: 31))
        endDate = Self.makeDate(year: 1952, month: 2, day: 29)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 1, day: 31))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 3, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixtyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 3, day: 1))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 3, day: 30)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixtyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 3, day: 1))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 3, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .ninetyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 3, day: 31))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 6, day: 30)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .ninetyDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 3, day: 31))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 7, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 7, day: 1))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 9, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .sixMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 7, day: 1))
        endDate = Self.makeDate(year: 1952, month: 10, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .nineMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 10, day: 1))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1952, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .nineMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 10, day: 1))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1953, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1953, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1953, month: 6, day: 30)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1953, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1953, month: 1, day: 1))
        endDate = Self.makeDate(year: 1953, month: 7, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .eighteenMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1953, month: 7, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1953, month: 1, day: 1))
        endDate = Self.makeDate(year: 1954, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .years(numberOfYears: 2))
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1954, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1955, month: 4, day: 13)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .years(numberOfYears: 3))
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1955, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1955, month: 1, day: 1))
        endDate = Self.makeDate(year: 1956, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .years(numberOfYears: 4))
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1956, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1956, month: 1, day: 1))
        endDate = Self.makeDate(year: 1957, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        endDate = Self.makeDate(year: 1957, month: 10, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        endDate = Self.makeDate(year: 1958, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1961, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1957, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1961, month: 1, day: 1))
        endDate = Self.makeDate(year: 1962, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1962, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1966, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1962, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1966, month: 1, day: 1))
        endDate = Self.makeDate(year: 1967, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fifteenYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1967, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1971, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fifteenYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1967, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1971, month: 1, day: 1))
        endDate = Self.makeDate(year: 1972, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .twentyYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1972, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1976, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .twentyYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1972, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1976, month: 1, day: 1))
        endDate = Self.makeDate(year: 1977, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .twentyFiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1977, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1979, month: 5, day: 18)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .twentyFiveYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1977, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1979, month: 1, day: 1))
        endDate = Self.makeDate(year: 1979, month: 5, day: 20)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenThousandDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1979, month: 5, day: 19))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1979, month: 1, day: 1))
        endDate = Self.makeDate(year: 1981, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .tenThousandDays)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1979, month: 5, day: 19))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1981, month: 1, day: 1))
        endDate = Self.makeDate(year: 1982, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1982, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 1991, month: 12, day: 31)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .thirtyYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1982, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1991, month: 1, day: 1))
        endDate = Self.makeDate(year: 1992, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1992, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 1992, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
        endDate = Self.makeDate(year: 2222, month: 1, day: 1)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .fortyYears)
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.oneDay), Self.makeDate(year: 1952, month: 1, day: 2))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.thirtyDays), Self.makeDate(year: 1952, month: 1, day: 31))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.sixtyDays), Self.makeDate(year: 1952, month: 3, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.ninetyDays), Self.makeDate(year: 1952, month: 3, day: 31))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.sixMonths), Self.makeDate(year: 1952, month: 7, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.nineMonths), Self.makeDate(year: 1952, month: 10, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.oneYear), Self.makeDate(year: 1953, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.eighteenMonths), Self.makeDate(year: 1953, month: 7, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.years(numberOfYears: 2)), Self.makeDate(year: 1954, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.years(numberOfYears: 3)), Self.makeDate(year: 1955, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.years(numberOfYears: 4)), Self.makeDate(year: 1956, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.fiveYears), Self.makeDate(year: 1957, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.tenYears), Self.makeDate(year: 1962, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.fifteenYears), Self.makeDate(year: 1967, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.twentyYears), Self.makeDate(year: 1972, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.twentyFiveYears), Self.makeDate(year: 1977, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.tenThousandDays), Self.makeDate(year: 1979, month: 5, day: 19))
        XCTAssertEqual(testTarget.dateOfThisCleantimeMilestone(.thirtyYears), Self.makeDate(year: 1982, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1992, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, Self.makeDate(year: 2222, month: 1, day: 1))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)

        startDate = Self.makeDate(year: 1952, month: 2, day: 29)
        endDate = Self.makeDate(year: 1953, month: 2, day: 27)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .nineMonths)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1952, month: 11, day: 29))
        XCTAssertNil(testTarget.dateOfLastAnnualMilestone)
        endDate = Self.makeDate(year: 1953, month: 2, day: 28)
        testTarget = LGV_CleantimeDateCalc(startDate: startDate, endDate: endDate)
        XCTAssertEqual(testTarget.lastCleantimeMilestone, .oneYear)
        XCTAssertEqual(testTarget.dateOfLastCleantimeMilestone, Self.makeDate(year: 1953, month: 2, day: 28))
        XCTAssertEqual(testTarget.dateOfLastAnnualMilestone, endDate)
    }
}
